dom-module#maki-masthead
  style.
    .top-padded {
      margin-top: 4em;
    }

    :host ::content .masthead .ui.inverted.segment {
      background: none;
    }

  if (config.service.masthead)
    style.
      .masthead {
        background: #fff url('#{config.service.masthead}') no-repeat center center !important;
        background-size: cover !important;
      }

  template
    .ui.inverted.vertical.masthead.segment
      .ui.container
        maki-navbar.ui.large.secondary.inverted.pointing.menu
      .ui.text.container#masthead
        template(is="dom-if", if="{{!component}}")
          .ui.center.aligned.inverted.segment
            h1.ui.inverted.header #{config.service.pitch}
            h2.ui.inverted.header #{config.service.mission}

            .content.top-padded
              if (config.service.cta)
                if (config.service.cta.component)
                  | !{config.service.cta.component}
                else
                  if (config.service.cta.icon)
                    - var cta = config.service.cta
                    a.ui.massive.centered.right.labeled.green.icon.button(href="#{cta.link}")
                      i.right.chevron.icon(class="#{cta.icon}")
                      | !{cta.text}
                  else
                    a.ui.massive.fluid.green.button(href="#{cta.link}") #{cta.text}
              else
                .ui.two.huge.buttons
                  a.ui.huge.primary.button(href="/examples") See the Examples
                  .or
                  a.ui.huge.green.right.labeled.icon.button(href="/people")
                    | Meet the Community
                    i.right.chevron.icon

  script.
    Polymer({
      is: 'maki-masthead',
      properties: {
        src: { type: String , observer: '_srcChanged' },
        component: { type: String , observer: '_componentChanged' },       
        data: { type: Object , observer: '_dataChanged' } 
      },
      _srcChanged: function(src) {
        var self = this;
        console.log('[MAKI:MASTHEAD]', '_srcChanged', src);
        document.querySelector(self.component).src = src;
      },
      _dataChanged: function(data) {
        var self = this;
        console.log('[MAKI:MASTHEAD]', '_dataChanged', data);
        document.querySelector(self.component).data = data;
      },
      _componentChanged: function(name, old) {
        console.log('[MAKI:MASTHEAD]', '_componentChanged', name);
        
        var self = this;
        var viewport = this.$.masthead;
        
        while (viewport.hasChildNodes()) {
          viewport.removeChild(viewport.lastChild);
        }
        
        if (name) {
          var element = document.createElement(name);
          element.src = self.src;
          
          // ಠ_ಠ
          element.classList.add('ui');
          element.classList.add('center');
          element.classList.add('aligned');
          element.classList.add('inverted');
          element.classList.add('segment');
          
          this.$.masthead.appendChild(element);

        }
      },
      ready: function() {
        console.log('[MAKI:MASTHEAD]', 'ready');
      }
    });
